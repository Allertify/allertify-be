version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:16-alpine
    container_name: allertify-postgres
    environment:
      POSTGRES_DB: allertify
      POSTGRES_USER: allertify
      POSTGRES_PASSWORD: 12345678
    ports:
      - "127.0.0.1:5437:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U allertify"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis (for caching and session storage)
  redis:
    image: redis:7-alpine
    container_name: allertify-redis
    ports:
      - "127.0.0.1:6371:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend Application
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: allertify-be
    env_file:
      - .env
    environment:
      NODE_ENV: development
      PORT: 3000
      DATABASE_URL: postgresql://allertify:12345678@postgres:5432/allertify
      JWT_ACCESS_SECRET: 4lL3rT1FFy_BE
      JWT_REFRESH_SECRET: 4lL3rT1FFy_BE
      REDIS_URL: redis://redis:6379
    ports:
      - "127.0.0.1:3109:3000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./logs:/app/logs
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:3000/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:
  redis_data: